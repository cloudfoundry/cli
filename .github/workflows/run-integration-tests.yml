name: Run Integration Tests

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environment-name:
        required: true
        type: string
      go-version:
        required: true
        type: string
      run-with-client-creds:
        required: true
        type: boolean
     
jobs:
  run-integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    
    steps:          
      - name: Set Up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ inputs.go-version }}
          check-latest: true
      - name: Download metadata
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.environment-name }}
      - name: Install Tools
        run: |
          wget https://github.com/cloudfoundry/bosh-bootloader/releases/download/v8.4.110/bbl-v8.4.110_linux_x86-64 -P /tmp
          mv /tmp/bbl-* /usr/local/bin/bbl
          chmod +x /usr/local/bin/bbl
          bbl --version

          wget https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-7.0.1-linux-amd64 --output-document="/usr/local/bin/bosh"
          chmod +x /usr/local/bin/bosh
          bosh --version

          wget https://github.com/cloudfoundry/credhub-cli/releases/download/2.9.4/credhub-linux-2.9.4.tgz -P ~/
          tar xzvf ~/credhub-linux-2.9.4.tgz
          mv credhub /usr/local/bin/credhub
          chmod +x /usr/local/bin/credhub
          credhub --version
          rm ~/credhub-linux-2.9.4.tgz

      - name: Download cli
        uses: dawidd6/action-download-artifact@v2
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: cf-cli.tgz
          path: ${{ github.workspace }}

      - name: Run Integration Tests
        if: ${{ !inputs.run-with-client-creds }}
        run: |
          mkdir -p go/src/code.cloudfoundry.org
          ln -s ${PWD} go/src/code.cloudfoundry.org
          ENV=$(cat metadata.json | jq -r '.name')
          eval "$(bbl print-env --metadata-file ./metadata.json)"
          export CF_INT_PASSWORD="$(credhub get -n /bosh-$ENV/cf/cf_admin_password | bosh interpolate --path /value -)"
          export CF_INT_OIDC_USERNAME="admin-oidc"
          export CF_INT_OIDC_PASSWORD=$(credhub get -n /bosh-$ENV/cf/uaa_oidc_admin_password | bosh interpolate --path /value -)
          export CF_INT_API="https://api.${ENV}.cf-app.com"
          export CF_DIAL_TIMEOUT=15
          export CF_USERNAME=admin
          export FLAKE_ATTEMPTS=2
          export NODES=16
          export GOPATH=$PWD/go
          export PATH=$GOPATH/bin:$PATH

          make out/cf-cli_linux_x86-64
          export PATH="$(pwd)/out:$PATH"

          mkdir -p $GOPATH/bin
          mv out/cf-cli_linux_x86-64 $GOPATH/bin/cf

          chmod 755 -R $GOPATH/src/code.cloudfoundry.org/cli

          cd $GOPATH/src/code.cloudfoundry.org/cli
          go install github.com/onsi/ginkgo/ginkgo@v1.16.4

          export CF_PASSWORD=${CF_INT_PASSWORD}
          cf api ${CF_INT_API} --skip-ssl-validation
          cf auth

          make integration-tests-full-ci

      - name: Run Integration Tests with client credentials
        if: ${{ inputs.run-with-client-creds }}
        env:
          CF_INT_CLIENT_ID: 'potato-face'
          CF_INT_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        run: |
          mkdir -p go/src/code.cloudfoundry.org
          ln -s ${PWD} go/src/code.cloudfoundry.org
          ENV=$(cat metadata.json | jq -r '.name')
          eval "$(bbl print-env --metadata-file ./metadata.json)"
          export CF_INT_PASSWORD="$(credhub get -n /bosh-$ENV/cf/cf_admin_password | bosh interpolate --path /value -)"
          export CF_INT_OIDC_USERNAME="admin-oidc"
          export CF_INT_OIDC_PASSWORD=$(credhub get -n /bosh-$ENV/cf/uaa_oidc_admin_password | bosh interpolate --path /value -)
          export CF_INT_API="https://api.${ENV}.cf-app.com"
          export CF_DIAL_TIMEOUT=15
          export CF_USERNAME=admin
          export FLAKE_ATTEMPTS=2
          export NODES=16
          export GOPATH=$PWD/go
          export PATH=$GOPATH/bin:$PATH

          make out/cf-cli_linux_x86-64
          export PATH="$(pwd)/out:$PATH"

          mkdir -p $GOPATH/bin
          mv out/cf-cli_linux_x86-64 $GOPATH/bin/cf

          chmod 755 -R $GOPATH/src/code.cloudfoundry.org/cli

          cd $GOPATH/src/code.cloudfoundry.org/cli
          go install github.com/onsi/ginkgo/ginkgo@v1.16.4

          export CF_PASSWORD=${CF_INT_PASSWORD}
          cf api ${CF_INT_API} --skip-ssl-validation
          cf auth

          make integration-tests-full-ci
