name: iterate-windows

on:
  workflow_dispatch:

permissions:
  contents: read

jobs: 
  iterate-windows:
    name: iterate-windows
    defaults:
      run:
        shell: bash
    runs-on: windows-latest
    environment: PROD
    steps:
    - name: Checkout cli-ci
      uses: actions/checkout@v3
      with:
        repository: cloudfoundry/cli-ci
        path: cli-ci
    - name: Checkout cf-deployment
      uses: actions/checkout@v3
      with:
        repository: cloudfoundry/cf-deployment
        path: cf-deployment
    - name: Checkout CF deployment tasks
      uses: actions/checkout@v3
      with:
        repository: cloudfoundry/cf-deployment-concourse-tasks
        path: cf-deployment-concourse-tasks
    - id: claim-toolsmiths-env
      name: Claim Toolsmiths Environment
      env:
        api_token: ${{ secrets.TOOLSMITHS_API_TOKEN }}
        hostname:  ${{ secrets.TOOLSMITHS_HOSTNAME }}
        notes:     "GHA CF CLI Integration Tests ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        pool_name: ${{ vars.TS_POOL_NAME }}
      run: |
        while true; do
          curl -s --show-error -D headers.txt -H 'Accept: application/json' \
          -X GET "https://${hostname}/pooled_gcp_engineering_environments/claim" \
          --data-urlencode "api_token=${api_token}" \
          --data-urlencode "environment_name=palecopper" > metadata.json \
          || echo "Unable to reach server, trying again in 30 seconds..."

          cat headers.txt

          ERR_500="Sorry, the Toolsmiths Environments app is currently encountering issues. Trying again in 30 seconds..."
          ERR_429="Sorry, Toolsmiths are out of environments in your requested pool. New environments are on their way but you can stop by the Toolsmiths slack channel for more help."
          ERR_409="Sorry, was not able to claim an environment. Trying again in 30 seconds..."

          grep -q -E "HTTP/[[:digit:]\.]{1,3} 401" headers.txt && exit 1
          grep -q -E "HTTP/[[:digit:]\.]{1,3} 404" headers.txt && exit 2
          grep -q -E "HTTP/[[:digit:]\.]{1,3} 500" headers.txt && echo "$ERR_500"
          grep -q -E "HTTP/[[:digit:]\.]{1,3} 200" headers.txt && break
          grep -q -E "HTTP/[[:digit:]\.]{1,3} 429" && echo "$ERR_429"
          grep -q -E "HTTP/[[:digit:]\.]{1,3} 409" && echo "$ERR_409"

          sleep 30
        done
        cat metadata.json | jq -r '.name'
    - name: Install Tools
      run: |
        install_location=/usr/bin
        bbl_artifact=bbl-v8.4.110_windows.exe
        bosh_cli_artifact=bosh-cli-7.0.1-windows-amd64.exe
        credhub_artifact=credhub-windows-2.9.4.tgz
        curl https://github.com/cloudfoundry/bosh-bootloader/releases/download/v8.4.110/${bbl_artifact} --silent --location --output  $install_location/bbl
        chmod +x $install_location/bbl
        bbl --version

        curl https://s3.amazonaws.com/bosh-cli-artifacts/$bosh_cli_artifact --silent --output $install_location/bosh --location
        chmod +x $install_location/bosh
        bosh --version

        curl https://github.com/cloudfoundry/credhub-cli/releases/download/2.9.4/$credhub_artifact --silent --output /tmp/$credhub_artifact --location
        tar xzvf /tmp/$credhub_artifact
        mv credhub $install_location/credhub
        chmod +x $install_location/credhub
        credhub --version

    - name: test powershell
      shell: pwsh
      run: |
        bbl print-env --metadata-file metadata.json

    - name: Deploy edge CAPI with Isolation Segment and OIDC Provider
      env:
        CF_INT_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      run: |
        # find latest capi
        FILENAME="$(aws s3 ls capi-releases --no-sign-request --recursive --region us-east-1 | sort | tail -n 1 | awk '{print $4}')"
        aws s3 cp s3://capi-releases/$FILENAME $FILENAME --no-sign-request --region us-east-1 --no-progress

        touch "/tmp/$(cat metadata.json | jq -r '.name').priv"
        chmod 0600 "/tmp/$(cat metadata.json | jq -r '.name').priv"
        echo "adfadsfasdfasdfasdfasdfasdfasdfasdfasdfa" > "/tmp/$(cat metadata.json | jq -r '.name').priv"
        cat "/tmp/$(cat metadata.json | jq -r '.name').priv"
        ls -l /tmp
        echo bbl print-env --metadata-file metadata.json  --shell-type posix
        bbl print-env --metadata-file metadata.json --shell-type posix
        bosh upload-release --sha2 "$FILENAME"
        rm $FILENAME

        # deploy
        bosh -d cf manifest > /tmp/manifest.yml
        bosh interpolate /tmp/manifest.yml \
          -o cf-deployment/operations/test/add-persistent-isolation-segment-diego-cell.yml \
          -o cli-ci/ci/infrastructure/operations/add-oidc-provider.yml \
          -o cli-ci/ci/infrastructure/operations/add-uaa-client-credentials.yml \
          -o cli-ci/ci/infrastructure/operations/use-latest-capi.yml \
          -v client-secret="${CF_INT_CLIENT_SECRET}" \
          > ./director.yml

        bosh -d cf deploy director.yml -n
        echo "Deployed CAPI version:"
        bosh -d cf releases | grep capi
