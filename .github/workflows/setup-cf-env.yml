name: Setup CF Environment

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      capi-version:
        required: true
        type: string
    outputs:
      environment-name:
        description: "Name of claimed environment"
        value: ${{ jobs.setup-cf-env.outputs.environment-name }}

jobs:
  setup-cf-env:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      environment-name: ${{ steps.claim-toolsmiths-env.outputs.environment-name }}
    steps:
      - id: claim-toolsmiths-env
        name: Claim Toolsmiths Environment
        env:
          api_token: ${{ secrets.TOOLSMITHS_API_TOKEN }}
          hostname:  ${{ secrets.TOOLSMITHS_HOSTNAME }}
          notes:     CF CLI Github Actions Integration Tests
          pool_name: cf-deployment
        run: |
          while true; do
            curl -s --show-error -D >(tee headers.txt >&2) -H 'Accept: application/json' \
            -X POST "https://${hostname}/pooled_gcp_engineering_environments/claim" \
            --data-urlencode "api_token=${api_token}" \
            --data-urlencode "pool_name=${pool_name}" \
            --data-urlencode "notes=${notes}" > metadata.json \
            || echo "Unable to reach server, trying again in 30 seconds..."

            ERR_500="Sorry, the Toolsmiths Environments app is currently encountering issues. Trying again in 30 seconds..."
            ERR_429="Sorry, Toolsmiths are out of environments in your requested pool. New environments are on their way but you can stop by the Toolsmiths slack channel for more help."
            ERR_409="Sorry, was not able to claim an environment. Trying again in 30 seconds..."

            grep -q -E "HTTP/[[:digit:]\.]{1,3} 401" headers.txt && exit 1
            grep -q -E "HTTP/[[:digit:]\.]{1,3} 404" headers.txt && exit 2
            grep -q -E "HTTP/[[:digit:]\.]{1,3} 500" headers.txt && echo "$ERR_500"
            grep -q -E "HTTP/[[:digit:]\.]{1,3} 200" headers.txt && break
            grep -q -E "HTTP/[[:digit:]\.]{1,3} 429" && echo "$ERR_429"
            grep -q -E "HTTP/[[:digit:]\.]{1,3} 409" && echo "$ERR_409"

            sleep 30
          done
          
          ENV=$(cat metadata.json | jq -r '.name')
          echo "::set-output name=environment-name::${ENV}"

      - name: 'Upload Metadata'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.claim-toolsmiths-env.outputs.environment-name }}
          path: metadata.json

      - name: Checkout cli-ci
        uses: actions/checkout@v3
        with:
          repository: cloudfoundry/cli-ci
          path: cli-ci

      - name: Checkout cf-deployment
        uses: actions/checkout@v3
        with:
          repository: cloudfoundry/cf-deployment
          path: cf-deployment

      - name: Install Tools
        run: |
          wget https://github.com/cloudfoundry/bosh-bootloader/releases/download/v8.4.110/bbl-v8.4.110_linux_x86-64 -P /tmp
          mv /tmp/bbl-* /usr/local/bin/bbl
          chmod +x /usr/local/bin/bbl
          bbl --version

          wget https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-7.0.1-linux-amd64 --output-document="/usr/local/bin/bosh"
          chmod +x /usr/local/bin/bosh
          bosh --version

      - name: Deploy edge CAPI with Isolation Segment and OIDC Provider
        if: ${{ inputs.capi-version == 'edge' }}
        run: |
          # find latest capi
          FILENAME="$(aws s3 ls capi-releases --no-sign-request --recursive --region us-east-1 | sort | tail -n 1 | awk '{print $4}')"
          aws s3 cp s3://capi-releases/$FILENAME $FILENAME --no-sign-request --region us-east-1
          eval "$(bbl print-env --metadata-file metadata.json)"
          bosh upload-release --sha2 "$FILENAME"
          rm $FILENAME

          # deploy
          bosh -d cf manifest > /tmp/manifest.json
          bosh -n -d cf deploy /tmp/manifest.json \
               -o cli-ci/ci/infrastructure/operations/use-latest-capi.yml \
               -o cf-deployment/operations/test/add-persistent-isolation-segment-diego-cell.yml \
               -o cli-ci/ci/infrastructure/operations/add-oidc-provider.yml

          echo "Deployed CAPI version:"
          bosh -d cf releases | grep capi
