name: Units Tests

on:
  push:
    branches:
    - "*"

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  shared-values:
    name: Shared Values
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.set-go-version.outputs.go-version }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - id: set-go-version
      name: Parse Golang Version
      run: |
        go_version=($(grep -E '^go 1\.[[:digit:]]{1,2}' go.mod))
        echo "golang version: ${go_version[1]}"
        echo "::set-output name=go-version::${go_version[1]}"

  lint:
    name: Lint code
    runs-on: ubuntu-latest
    needs: shared-values
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ needs.shared-values.outputs.go-version }}

    - name: Run go fmt
      run: go fmt && git diff --exit-code

  units:
    name: Units
    needs: shared-values
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - ubuntu-18.04
          - macos-latest
          - macos-10.15
    runs-on: ${{ matrix.os }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ needs.shared-values.outputs.go-version }}

    - name: Set up Test
      run: |
        go install github.com/onsi/ginkgo/ginkgo@v1.16.4
        go install github.com/onsi/gomega/matchers

    - name: Run Linux Units
      run: make units
      env:
        ACK_GINKGO_RC: true

  units-windows:
    name: Units Windows
    strategy:
      matrix:
        os:
          - windows-2022
          - windows-2019
          - windows-2016
    runs-on: ${{ matrix.os }}
    needs: shared-values
    defaults:
      run:
        shell: pwsh
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ needs.shared-values.outputs.go-version }}

    - name: Set up Test
      run: |
        go install github.com/onsi/ginkgo/ginkgo@v1.16.4
        go install github.com/onsi/gomega/matchers

    - name: Get build-time dependencies
      run: |
        choco install --no-progress --limit-output -y make

    - name: Run Windows Units
      env:
        ACK_GINKGO_RC: true
      run: >
        # Get-Command make
        # Get-Item Makefile
        # make units-non-plugin

        ginkgo -r -p
        -randomizeAllSpecs
        -randomizeSuites
        -skipPackage integration,cf\ssh,plugin,cf\actors\plugin,cf\commands\plugin,cf\actors\plugin,util\randomword
        -flakeAttempts=2

# vim: set sw=2 ts=2 sts=2 et tw=78 foldlevel=2 fdm=indent nospell:
