name: Build Binaries

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - v8
      - v7
    paths-ignore:
      - 'doc/**'
      - '.gitpod.yml'
      - 'README.md'
  push:
    branches:
      - main
      - v8
      - v7
    paths-ignore:
      - 'doc/**'
      - '.github/**'
      - '.gitpod.yml'
      - 'README.md'

permissions:
  contents: read

jobs:
  shared-values:
    name: Shared Values
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.set-go-version.outputs.go-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: set-go-version
        name: Parse Golang Version
        run: |
          go_version=($(grep -E '^go 1\.[[:digit:]]{1,2}' go.mod))
          echo "golang version: ${go_version[1]}"
          echo "go-version=${go_version[1]}" >> $GITHUB_OUTPUT

  build-linux-binaries:
    name: Build Linux binaries
    runs-on: ubuntu-latest
    needs:
      - shared-values
    outputs:
      linux-binaries: ${{ steps.build-linux-binaries.outputs.linux-binaries }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.shared-values.outputs.go-version }}

      - name: Build Linux
        id: build-linux
        run: |
          set -ex

          export GOPATH=$PWD/gopath
          export PATH=$GOPATH/bin:$PATH

          go version

          echo "Building 64-bit Linux"
          make out/cf-cli_linux_x86-64

          echo "Creating tarball"
          tar -cvzf cf-cli-linux-binaries.tgz -C out .

      - name: 'Upload Linux Binaries'
        uses: actions/upload-artifact@v3
        with:
          name: cf-cli-linux-binaries.tgz
          path: cf-cli-linux-binaries.tgz

  build-windows-binaries:
    name: Build Windows binaries
    runs-on: windows-latest
    needs:
      - shared-values
    outputs:
      windows-binaries: ${{ steps.build-windows-binaries.outputs.windows-binaries }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.shared-values.outputs.go-version }}

      - name: Get build-time dependencies
        run: |
          choco install --no-progress --limit-output -y make
          go install github.com/akavel/rsrc@v0.10.2

      - name: Build Windows
        id: build-windows
        run: |
          Get-Command make
          Get-Item Makefile

          echo "Building 64-bit Windows"
          make out/cf-cli_winx64.exe

          echo "Creating tarball"
          tar -cvzf cf-cli-windows-binaries.tgz -C out .

      - name: 'Upload Windows Binaries'
        uses: actions/upload-artifact@v3
        with:
          name: cf-cli-windows-binaries.tgz
          path: cf-cli-windows-binaries.tgz
