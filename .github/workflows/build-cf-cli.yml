name: Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - v8
      - v7
    paths-ignore:
      - 'doc/**'
      - '.gitpod.yml'
      - 'README.md'
  push:
    # branches:
    #   - main
    #   - v8
    #   - v7
    # paths-ignore:
    #   - 'doc/**'
    #   - '.github/**'
    #   - '.gitpod.yml'
    #   - 'README.md'

permissions:
  contents: read

jobs:
  shared-values:
    name: Shared Values
    runs-on: ubuntu-latest
    outputs:
      go-version: ${{ steps.set-go-version.outputs.go-version }}
      cf-build-sha: ${{ steps.set-build-sha.outputs.cf-build-sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: set-go-version
        name: Parse Golang Version
        run: |
          go_version=($(grep -E '^go 1\.[[:digit:]]{1,2}' go.mod))
          echo "golang version: ${go_version[1]}"
          echo "go-version=${go_version[1]}" >> $GITHUB_OUTPUT

      - id: set-build-sha
        name: Get Build SHA
        run: cf-build-sha=($(git rev-parse --short HEAD))

  build-artifacts:
    name: Integration tests with EDGE CAPI
    runs-on: ubuntu-latest
    needs:
      - shared-values
    outputs:
      build-binaries: ${{ steps.build-artifacts.outputs.build-binaries }}
    steps:
      - name: build
        run: >
          set -ex

          cwd=$PWD
          export GOPATH=$PWD/gopath
          export PATH=$GOPATH/bin:$PATH

          go version

          pushd $GOPATH/src/code.cloudfoundry.org/cli
            export CF_BUILD_VERSION=$(cat BUILD_VERSION)
            export CF_BUILD_SHA=${{ needs.shared-values.outputs.cf-build-sha }}
            export CF_BUILD_DATE=$(date -u +"%Y-%m-%d")

            echo "Building 32-bit Linux"
            make out/cf-cli_linux_i686

            echo "Building 64-bit Linux"
            make out/cf-cli_linux_x86-64

            echo "Building 32-bit Windows"
            make out/cf-cli_win32.exe

            echo "Building 64-bit Windows"
            make out/cf-cli_winx64.exe

            echo "Creating tarball"
            tar -cvzf $cwd/cf-cli-binaries-${CF_BUILD_SHA}.tgz -C out .
            build-binaries=cf-cli-binaries-${CF_BUILD_SHA}.tgz
          popd

      - name: 'Upload Metadata'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-artifacts.outputs.build-binaries }}
          path: ${{ steps.build-artifacts.outputs.build-binaries }}
