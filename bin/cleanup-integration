#!/usr/bin/env bash

set -e

xargs_func () {
  if [[ $(uname) == "Darwin" ]]; then
    xargs -n 1 -P 15 $@
  else
    xargs -n 1 -P 15 -r $@
  fi
}

CF_API=${CF_API:-"api.bosh-lite.com"}
CF_USERNAME=${CF_USERNAME:-"admin"}
CF_PASSWORD=${CF_PASSWORD:-"admin"}

export CF_CLI_EXPERIMENTAL=true
export CF_DIAL_TIMEOUT=15

if [[ -z $SKIP_SSL_VALIDATION || $SKIP_SSL_VALIDATION == "true" ]]; then
  cf api $CF_API --skip-ssl-validation
else
  cf api $CF_API
fi

cf auth $CF_USERNAME $CF_PASSWORD

# we don't want the pipeline job to fail because there's a high chance of
# failure when running commands in parallel
set +e

cf orgs | grep -i -e ^integration-org -e CATS- | xargs_func cf delete-org -f
cf orgs | grep -i -e ^integration-org -e CATS- | xargs_func cf delete-org -f
cf isolation-segments | grep -i ^integration-isolation-segment | xargs_func cf delete-isolation-segment -f

cf quotas | grep -i -e ^integration-quota -e CATS- | cut -d " " -f1 | xargs_func cf delete-quota -f

cf create-org temp-org
cf target -o temp-org
cf domains | grep -i ^integration- | cut -d " " -f1 | xargs_func cf delete-shared-domain -f

cf security-groups | grep -i "^#.* integration-sec-group" | awk '{print $2}' | xargs_func cf delete-security-group -f

cf delete-org -f temp-org

cf curl /v2/users?results-per-page=100 | \
  jq -r .resources[].entity.username | \
  grep -i ^integration-user | \
  xargs_func cf delete-user -f || echo
