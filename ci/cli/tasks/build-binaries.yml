platform: linux

image_resource:
  type: docker-image
  source:
    repository: cloudfoundry/cli-ci

inputs:
- name: cli
  path: gopath/src/code.cloudfoundry.org/cli

outputs:
- name: cross-compiled

run:
  path: bash
  args:
  - -c
  - |
    set -ex

    cwd=$PWD

    export GOPATH=$PWD/gopath
    export PATH=$GOPATH/bin:$PATH

    go version

    pushd $GOPATH/src/code.cloudfoundry.org/cli
      BUILD_VERSION=$(cat ci/VERSION)
      BUILD_SHA=$(git rev-parse --short HEAD)
      BUILD_DATE=$(date -u +"%Y-%m-%d")

      VERSION_LDFLAGS="-X code.cloudfoundry.org/cli/version.binaryVersion=${BUILD_VERSION} -X code.cloudfoundry.org/cli/version.binarySHA=${BUILD_SHA} -X code.cloudfoundry.org/cli/version.binaryBuildDate=${BUILD_DATE}"

      echo "Building 32-bit Linux"
      CGO_ENABLED=0 GOARCH=386 GOOS=linux go build -a -tags netgo -installsuffix netgo -ldflags "-w -s -extldflags \"-static\" ${VERSION_LDFLAGS}" -o out/cf-cli_linux_i686 .

      echo "Building 64-bit Linux"
      CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -a -tags netgo -installsuffix netgo -ldflags "-w -s -extldflags \"-static\" ${VERSION_LDFLAGS}" -o out/cf-cli_linux_x86-64 .

      # This to to add the CF Icon into the windows executable
      go get github.com/akavel/rsrc
      rsrc -ico ci/installers/windows/cf.ico

      echo "Building 32-bit Windows"
      GOARCH=386 GOOS=windows go build -tags="forceposix" -ldflags "-w -s ${VERSION_LDFLAGS}" -o out/cf-cli_win32.exe .

      echo "Building 64-bit Windows"
      GOARCH=amd64 GOOS=windows go build -tags="forceposix" -ldflags "-w -s ${VERSION_LDFLAGS}" -o out/cf-cli_winx64.exe .

      echo "Creating tarball"
      tar -cvzf $cwd/cross-compiled/cf-cli-binaries.tgz -C out .
    popd
